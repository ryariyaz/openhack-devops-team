runs-on: ubuntu-latest



steps:
- uses: actions/checkout@v2
- name: Setup .NET Core
uses: actions/setup-dotnet@v1
with:
dotnet-version: 2.1.301
- name: Install dependencies
run: dotnet restore ./apis/poi/poi.sln
- name: Build
run: dotnet build ./apis/poi/poi.sln --configuration Release --no-restore
- name: Create issue on build failure
if: ${{ failure() }}
uses: JasonEtco/create-an-issue@v2.4.0
env:
GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
- name: Test
run: dotnet test ./apis/poi/tests/UnitTests/UnitTests.csproj --no-restore --verbosity normal

docker_build_and_push:
runs-on: ubuntu-latest
needs: build
steps:
- uses: actions/checkout@v2

- name: Azure Container Registry Login
run: docker login $registry -u ${{ secrets.ACR_USER }} -p ${{ secrets.ACR_KEY }}



- name: Docker build
run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path



- name: Docker Push
run: docker push $registry/$repository:${{github.run_number}}



- uses: actions/github-script@0.9.0
if: failure()
with:
github-token: ${{secrets.GITHUB_TOKEN}}
script: |
let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
github.issues.create({
owner: context.repo.owner,
repo: context.repo.repo,
title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
body: body
});
